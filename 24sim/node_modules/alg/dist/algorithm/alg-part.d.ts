export declare abstract class AlgPart {
    abstract readonly type: string;
    protected freeze(): void;
}
export declare abstract class Unit extends AlgPart {
}
export declare abstract class Annotation extends Unit {
}
export declare abstract class UnitWithAmount extends Unit {
    amount: number;
    constructor(amount?: number);
}
export declare abstract class BaseMove extends UnitWithAmount {
}
export declare class Sequence extends AlgPart {
    nestedUnits: Unit[];
    type: string;
    constructor(nestedUnits: Unit[]);
}
export declare class Group extends UnitWithAmount {
    nestedSequence: Sequence;
    type: string;
    constructor(nestedSequence: Sequence, amount?: number);
}
export declare class Commutator extends UnitWithAmount {
    A: Sequence;
    B: Sequence;
    type: string;
    constructor(A: Sequence, B: Sequence, amount?: number);
}
export declare class Conjugate extends UnitWithAmount {
    A: Sequence;
    B: Sequence;
    type: string;
    constructor(A: Sequence, B: Sequence, amount?: number);
}
export declare class Pause extends Unit {
    type: string;
    constructor();
}
export declare class NewLine extends Annotation {
    type: string;
    constructor();
}
export declare class CommentShort extends Annotation {
    comment: string;
    type: string;
    constructor(comment: string);
}
export declare class CommentLong extends Annotation {
    comment: string;
    type: string;
    constructor(comment: string);
}
