{"version":3,"sources":["webpack://kpuzzle/webpack/universalModuleDefinition","webpack://kpuzzle/webpack/bootstrap","webpack://kpuzzle/external \"alg\"","webpack://kpuzzle/./src/jison_parser/index.js","webpack://kpuzzle/./src/moveexpander.ts","webpack://kpuzzle/./src/kpuzzle.ts","webpack://kpuzzle/./src/puzzle_definitions.ts","webpack://kpuzzle/./src/parser.ts","webpack://kpuzzle/./src/svg.ts"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","index","k","v","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","parser","trace","yy","symbols_","error","expressions","DEFINITION_FILE","EOF","NAME_DEFINITION","TOKEN_Name","SPACE","IDENTIFIER","ORBIT_DEFINITION","TOKEN_Set","SET_IDENTIFIER","INTEGER","NEWLINE","ORBIT_DEFINITIONS","INTERSTITIAL","OPTIONAL_NEWLINES","NUMBERS","DEFINITION","DEFINITIONS","START_PIECES","TOKEN_Solved","TOKEN_End","MOVE","TOKEN_Move","MOVES","$accept","$end","terminals_","2","5","7","8","9","11","12","13","14","22","23","25","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","numPieces","parseInt","orientations","concat","permutation","orientation","push","orbits","moves","startPieces","table","3","4","6","1","16","10","15","21","24","26","19","20","17","18","defaultActions","30","33","parseError","str","hash","recoverable","Error","parse","input","stack","vstack","lstack","recovering","args","slice","arguments","lexer","sharedState","setInput","yylloc","yyloc","ranges","options","getPrototypeOf","symbol","preErrorSymbol","state","action","len","newState","expected","lex","token","yyval","errStr","showPosition","join","text","match","line","loc","Array","first_line","last_line","first_column","last_column","range","apply","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","next","pre","test_match","indexed_rule","backup","matches","tempMatch","rules","_currentRules","flex","begin","condition","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","id","inclusive","INITIAL","Parser","moveexpander_MoveExpander","[object Object]","gripStash","moveStash","fn","facenames","grip1","grip2","nslices","def","slices","axes","Invert","aprime","map","_","reverse","at","found","startsWith","rep","signMove","family","grip","isBlock","test","toUpperCase","endsWith","substring","faceSplit","splitByFaceNames","testGrip","j","outer","outerLayer","inner","innerLayer","undefined","Combine","mv","alg","external_alg_","nestedUnits","signmove","expandSlices","e","Transformation","KPuzzleDefinition","t1","t2","newTrans","orbitName","oDef","o1","o2","newPerm","newOri","idx","Multiply","amount","IdentityTransformation","halfish","floor","twiceHalfish","definition","transformation","orbitDefinition","newPermutation","newOrientation","orbitTransformation","fromIdx","EquivalentTransformations","EquivalentStates","stateForSiGNMove","repMoveString","move","kpuzzle_KPuzzle","output","moveName","expandSlicesByName","moveExpander","faceNames","me","getMoveExpander","setFaceNames","addGrip","Puzzles","222","CORNERS","U","R","F","svg","333","EDGES","D","L","B","pyram","CENTERS","TIPS","u","b","moveOrbit","oldOrientation","perm","FixMoves","jison_parser","xmlns","svgCounter","SVG","kPuzzleDefinition","originalColors","gradients","svgID","toString","element","document","createElement","classList","add","innerHTML","body","appendChild","svgElem","querySelector","namespaceURI","gradientDefs","createElementNS","insertBefore","firstChild","elementID","elem","elementByID","originalColor","style","fill","newGradient","setAttribute","grad","stopDefs","color","stopDef","stop","nextState","fraction","curOrbitState","nextOrbitState","fromCur","singleColor","fromNext","easedBackwardsPercent","children","max"],"mappings":"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","file":"kpuzzle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"alg\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"alg\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"kpuzzle\"] = factory(require(\"alg\"));\n\telse\n\t\troot[\"kpuzzle\"] = factory(root[\"alg\"]);\n})(typeof self !== \"undefined\" ? self : this, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar index = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,7],$V1=[1,12],$V2=[1,10],$V3=[5,11,14,22,25],$V4=[11,14],$V5=[1,25],$V6=[1,28],$V7=[5,14],$V8=[12,23],$V9=[1,40],$Va=[1,44],$Vb=[8,14];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"expressions\":3,\"DEFINITION_FILE\":4,\"EOF\":5,\"NAME_DEFINITION\":6,\"TOKEN_Name\":7,\"SPACE\":8,\"IDENTIFIER\":9,\"ORBIT_DEFINITION\":10,\"TOKEN_Set\":11,\"SET_IDENTIFIER\":12,\"INTEGER\":13,\"NEWLINE\":14,\"ORBIT_DEFINITIONS\":15,\"INTERSTITIAL\":16,\"OPTIONAL_NEWLINES\":17,\"NUMBERS\":18,\"DEFINITION\":19,\"DEFINITIONS\":20,\"START_PIECES\":21,\"TOKEN_Solved\":22,\"TOKEN_End\":23,\"MOVE\":24,\"TOKEN_Move\":25,\"MOVES\":26,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",7:\"TOKEN_Name\",8:\"SPACE\",9:\"IDENTIFIER\",11:\"TOKEN_Set\",12:\"SET_IDENTIFIER\",13:\"INTEGER\",14:\"NEWLINE\",22:\"TOKEN_Solved\",23:\"TOKEN_End\",25:\"TOKEN_Move\"},\nproductions_: [0,[3,2],[6,3],[10,8],[15,1],[15,2],[16,1],[16,2],[17,0],[17,1],[18,1],[18,3],[19,4],[19,6],[20,1],[20,2],[21,4],[24,6],[26,1],[26,3],[4,8]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n return $$[$0-1]; \nbreak;\ncase 2:\nthis.$ = $$[$0];\nbreak;\ncase 3:\nthis.$ = [$$[$0-5], {numPieces: parseInt($$[$0-3]), orientations: parseInt($$[$0-1])}];\nbreak;\ncase 4:\nthis.$ = {};               this.$[$$[$0][0]] = $$[$0][1];\nbreak;\ncase 5: case 15:\nthis.$ = $$[$0-1]; this.$[$$[$0][0]] = $$[$0][1];\nbreak;\ncase 10:\nthis.$ = [parseInt($$[$0])];\nbreak;\ncase 11:\nthis.$ = $$[$0-2].concat([parseInt($$[$0])]);\nbreak;\ncase 12:\n\n            this.$ = [$$[$0-3], {permutation: $$[$0-1], orientation: []}];\n            for (var i = 0; i < $$[$0-1].length; i++) {\n                this.$[1].orientation.push(0);\n            }\n        \nbreak;\ncase 13:\nthis.$ = [$$[$0-5], {permutation: $$[$0-3], orientation: $$[$0-1]}];\nbreak;\ncase 14:\nthis.$ = {};           this.$[$$[$0][0]] = $$[$0][1];\nbreak;\ncase 16:\nthis.$ = $$[$0-1]\nbreak;\ncase 17:\nthis.$ = [$$[$0-3], $$[$0-1]];\nbreak;\ncase 18:\nthis.$ = {};     this.$[$$[$0][0]] = $$[$0][1];\nbreak;\ncase 19:\nthis.$ = $$[$0-2]; this.$[$$[$0][0]] = $$[$0][1];\nbreak;\ncase 20:\nthis.$ = {name: $$[$0-7], orbits: $$[$0-5], moves: $$[$0-1], startPieces: $$[$0-3]};\nbreak;\n}\n},\ntable: [{3:1,4:2,6:3,7:[1,4]},{1:[3]},{5:[1,5]},{14:$V0,16:6},{8:[1,8]},{1:[2,1]},{10:11,11:$V1,14:$V2,15:9},o($V3,[2,6]),{9:[1,13]},{10:15,11:$V1,14:$V0,16:14},o($V3,[2,7]),o($V4,[2,4]),{8:[1,16]},{14:[2,2]},{14:$V2,21:17,22:[1,18]},o($V4,[2,5]),{12:[1,19]},{14:$V0,16:20},{14:[1,21]},{8:[1,22]},{14:$V2,24:24,25:$V5,26:23},{12:$V6,19:27,20:26},{13:[1,29]},{5:[2,8],14:$V0,16:31,17:30},o($V7,[2,18]),{8:[1,32]},{12:$V6,19:34,23:[1,33]},o($V8,[2,14]),{14:[1,35]},{8:[1,36]},{5:[2,20]},{5:[2,9],14:$V2,24:37,25:$V5},{9:[1,38]},{14:[2,16]},o($V8,[2,15]),{13:$V9,18:39},{13:[1,41]},o($V7,[2,19]),{14:[1,42]},{8:$Va,14:[1,43]},o($Vb,[2,10]),{14:[1,45]},{12:$V6,19:27,20:46},o($V8,[2,12],{18:47,13:$V9}),{13:[1,48]},o($V4,[2,3]),{12:$V6,19:34,23:[1,49]},{8:$Va,14:[1,50]},o($Vb,[2,11]),o($V7,[2,17]),o($V8,[2,13])],\ndefaultActions: {5:[2,1],13:[2,2],30:[2,20],33:[2,16]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0: this.begin(\"id\"); return \"TOKEN_Name\" \nbreak;\ncase 1:return \"TOKEN_Set\"\nbreak;\ncase 2: this.begin(\"id\"); return \"TOKEN_Move\" \nbreak;\ncase 3:return \"TOKEN_Solved\"\nbreak;\ncase 4:return \"TOKEN_End\"\nbreak;\ncase 5: this.popState(); return \"IDENTIFIER\" \nbreak;\ncase 6:return \"SET_IDENTIFIER\"\nbreak;\ncase 7:return \"INTEGER\"\nbreak;\ncase 8:/* ignore comment */\nbreak;\ncase 9:return \"SPACE\"\nbreak;\ncase 10:return \"NEWLINE\"\nbreak;\ncase 11:return \"EOF\"\nbreak;\ncase 12:return \"INVALID\"\nbreak;\n}\n},\nrules: [/^(?:Name\\b)/,/^(?:Set\\b)/,/^(?:Move\\b)/,/^(?:Solved\\b)/,/^(?:End\\b)/,/^(?:(([1-9][0-9]*)(([1-9][0-9]*)*)?)*(([A-Za-z]+)|(<[A-Za-z]+(_[A-Za-z]+)*>)))/,/^(?:[A-Za-z][A-Za-z0-9]*)/,/^(?:[0-9]+)/,/^(?:#[^\\r\\n]*)/,/^(?: )/,/^(?:\\r?[\\n])/,/^(?:$)/,/^(?:.)/],\nconditions: {\"id\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12],\"inclusive\":true},\"INITIAL\":{\"rules\":[0,1,2,3,4,6,7,8,9,10,11,12],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = index;\nexports.Parser = index.Parser;\nexports.parse = function () { return index.parse.apply(index, arguments); };\n}\n","import {SiGNMove, parse} from \"alg\"\nimport {KPuzzleDefinition, Invert, Combine, Transformation} from \"./kpuzzle\"\n//   This class supports expanding a set of slice moves (for instance,\n//   U, 2U, 3U, 2D, D on the 5x5x5) into a full set of outer block, inner\n//   slice, etc. moves such as 2-3u or 5U, automatically.  The addGrip()\n//   method informs us what grips exist and how many slices there are.\n//   The setFaceNames() method tells us what the names of the faces are\n//   so we can unswizzle swizzled grip names.\nexport class MoveExpander {\n  gripStash: {[key:string]: Transformation[]}\n  moveStash: {[key:string]: Transformation}\n  facenames?: Array<string>\n  constructor() {\n     this.gripStash = {} ;\n     this.moveStash = {} ;\n  }\n  setFaceNames(fn:Array<string>):void {\n     this.facenames = fn ;\n  }\n  addGrip(grip1:string, grip2:string, nslices:number, def:KPuzzleDefinition) {\n     var slices = [] ;\n     var axes = this.gripStash ;\n     var moves = def.moves ;\n     for (var i=1; i<=nslices; i++) {\n        var t = (i==1 && moves[grip1]) || moves[\"\"+i+grip1] ;\n        if (!t) {\n           t = (i==nslices && moves[grip2] || moves[\"\"+(nslices+1-i)+grip2]) ;\n           if (t)\n              t = Invert(def, t) ;\n        }\n        if (!t)\n           throw \"Could not expand axis \" + grip1 + \" to \" + grip2 +\n                 \" because we are missing a move for slice \" + i ;\n        slices.push(t) ;\n     }\n     axes[grip1] = slices ;\n     var aprime = slices.map((_:Transformation)=>Invert(def, _)) ;\n     aprime.reverse() ;\n     axes[grip2] = aprime ;\n  }\n  splitByFaceNames(s:string, facenames:Array<string>) {\n      var r:Array<string> = [] ;\n      var at = 0 ;\n      while (at < s.length) {\n         var found = false ;\n         for (var i=0; i<facenames.length; i++) {\n            if (s.substr(at).startsWith(facenames[i])) {\n               r.push(facenames[i]) ;\n               at += facenames[i].length ;\n               found = true ;\n               break ;\n            }\n         }\n         if (!found)\n            return undefined ;\n      }\n      return r ;\n  }\n  expandSlices(rep:string, signMove:SiGNMove, def:KPuzzleDefinition) {\n     var t = this.moveStash[rep] ;\n     if (t)\n        return t ;\n     var axes = this.gripStash ;\n     var family = signMove.family ;\n     var grip = family ;\n     var isBlock = false ;\n     // the following \"reparse\" code is almost certainly wrong\n     if (/[a-z]/.test(family)) {\n        isBlock = true ;\n        grip = family.toUpperCase() ;\n     }\n     if (family.length > 1 && family.endsWith(\"w\")) {\n        isBlock = true ;\n        grip = family.substring(0, family.length-1) ;\n     }\n     var slices = axes[grip] ;\n     if (!slices && this.facenames) {   // can we unswizzle this grip name?\n        var faceSplit = this.splitByFaceNames(grip, this.facenames) ;\n        if (faceSplit) {\n           for (var i=1; i<faceSplit.length; i++) {\n              var testGrip = \"\" ;\n              for (var j=0; j<faceSplit.length; j++)\n                 testGrip += faceSplit[(i+j)%faceSplit.length] ;\n              slices = axes[testGrip] ;\n              if (slices) {\n                 grip = testGrip ;\n                 break ;\n              }\n           }\n        }\n     }\n     if (!slices)\n        return undefined ; // don't throw here; let others catch it\n     var outer = signMove.outerLayer ;\n     var inner = signMove.innerLayer ;\n     if (inner == undefined) {\n        if (outer == undefined) {\n           outer = 1 ;\n           inner = (isBlock ? 2 : 1) ;\n        } else\n           return undefined ; // should never happen\n     } else if (outer == undefined)\n        outer = (isBlock ? 1 : inner) ;\n     if (inner < outer)\n        return undefined ;\n     if (outer > axes[grip].length)\n        return undefined ;\n     var t = slices[outer-1] ;\n     for (var i=outer+1; i<=inner; i++)\n        t = Combine(def, t, slices[i-1]) ;\n     this.moveStash[rep] = t ;\n     return t ;\n  }\n  expandSlicesByName(mv:string, def:KPuzzleDefinition) {\n     var t = this.moveStash[mv] ;\n     if (t)\n        return t ;\n     try {\n        var alg = parse(mv) ;\n        if (alg.nestedUnits.length != 1)\n           return undefined ;\n        var signmove = alg.nestedUnits[0] as SiGNMove ; // need better way\n        return this.expandSlices(mv, signmove, def) ;\n     } catch (e) {\n        return undefined ;\n     }\n  }\n}\n","import {SiGNMove, algToString, Sequence} from \"alg\"\nimport {MoveExpander} from \"./moveexpander\"\n// TODO: Properly handle freezing\nexport class OrbitTransformation {\n  permutation: number[]\n  orientation: number[]\n}\n// TODO: Use a list instead of an object for performance?\nexport class Transformation {\n  [/* orbit name */key: string]: OrbitTransformation\n}\n\nexport class OrbitDefinition {\n  numPieces: number\n  orientations: number\n}\n\nexport class KPuzzleDefinition {\n  name: string\n  orbits: {[/* orbit name */key: string]: OrbitDefinition}\n  startPieces: Transformation // TODO: Expose a way to get the transformed start pieces.\n  moves: {[/* move name */key: string]: Transformation}\n  svg?: string\n  moveExpander?: MoveExpander ;\n}\n\nexport function Combine(def: KPuzzleDefinition, t1: Transformation, t2: Transformation): Transformation {\n  var newTrans: Transformation = <Transformation>{};\n  for (var orbitName in def.orbits) {\n    var oDef = def.orbits[orbitName];\n    var o1 = t1[orbitName];\n    var o2 = t2[orbitName];\n\n    var newPerm = new Array(oDef.numPieces);\n    var newOri = new Array(oDef.numPieces);\n    for (var idx = 0; idx < oDef.numPieces; idx++) {\n      // We subtract 1 to translate from location to index.\n      newOri[idx] = (o1.orientation[o2.permutation[idx]-1] + o2.orientation[idx])\n                                                         % oDef.orientations ;\n      newPerm[idx] = o1.permutation[o2.permutation[idx]-1] ;\n    }\n    newTrans[orbitName] = {permutation: newPerm, orientation: newOri};\n  }\n\n  return newTrans;\n}\n\nexport function Multiply(def: KPuzzleDefinition, t: Transformation, amount: number): Transformation {\n  if (amount < 0) {\n    return Multiply(def, Invert(def, t), -amount);\n  }\n  if (amount === 0) {\n    return IdentityTransformation(def);\n  }\n  if (amount === 1) {\n    return t;\n  }\n  var halfish = Multiply(def, t, Math.floor(amount/2));\n  var twiceHalfish = Combine(def, halfish, halfish);\n  if (amount % 2 === 0) {\n    return twiceHalfish;\n  } else {\n    return Combine(def, t, twiceHalfish);\n  }\n}\n\nexport function IdentityTransformation(definition: KPuzzleDefinition): Transformation {\n  var transformation = <Transformation>{};\n  for (var orbitName in definition.orbits) {\n    var orbitDefinition = definition.orbits[orbitName];\n    var newPermutation = new Array(orbitDefinition.numPieces);\n    var newOrientation = new Array(orbitDefinition.numPieces);\n    for (var i = 0; i < orbitDefinition.numPieces; i ++) {\n      newPermutation[i] = i;\n      newOrientation[i] = 0;\n    }\n    var orbitTransformation = {permutation: newPermutation, orientation: newOrientation};\n    transformation[orbitName] = orbitTransformation;\n  }\n  return transformation;\n}\n\nexport function Invert(def: KPuzzleDefinition, t: Transformation): Transformation {\n  var newTrans: Transformation = <Transformation>{};\n  for (var orbitName in def.orbits) {\n    var oDef = def.orbits[orbitName];\n    var o = t[orbitName];\n\n    var newPerm = new Array(oDef.numPieces);\n    var newOri = new Array(oDef.numPieces);\n    for (var idx = 0; idx < oDef.numPieces; idx++) {\n      var fromIdx = (o.permutation[idx] as number) - 1;\n      newPerm[fromIdx] = idx + 1;\n      newOri[fromIdx] = (oDef.orientations - o.orientation[idx]) % oDef.orientations;\n    }\n    newTrans[orbitName] = {permutation: newPerm, orientation: newOri};\n  }\n  return newTrans;\n}\n\nexport function EquivalentTransformations(def: KPuzzleDefinition, t1: Transformation, t2: Transformation): boolean {\n  for (var orbitName in def.orbits) {\n    var oDef = def.orbits[orbitName];\n    var o1 = t1[orbitName];\n    var o2 = t2[orbitName];\n\n    for (var idx = 0; idx < oDef.numPieces; idx++) {\n      if (o1.orientation[idx] !== o2.orientation[idx]) {\n        return false;\n      }\n      if (o1.permutation[idx] !== o2.permutation[idx]) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport function EquivalentStates(def: KPuzzleDefinition, t1: Transformation, t2: Transformation): boolean {\n  // Turn transformations into states.\n  // This accounts for indistinguishable pieces.\n  return EquivalentTransformations(\n    def,\n    Combine(def, def.startPieces, t1),\n    Combine(def, def.startPieces, t2)\n  );\n}\n\n// TODO: Move other helpers into the definition.\nexport function stateForSiGNMove(def: KPuzzleDefinition, signMove: SiGNMove) {\n  // TODO: Optimize this.\n  var repMoveString = algToString(new Sequence([new SiGNMove(signMove.outerLayer, signMove.innerLayer, signMove.family, 1)]));\n  var move:Transformation|undefined = def.moves[repMoveString];\n  if (!move) {\n      move = new KPuzzle(def).expandSlices(repMoveString, signMove) ;\n  }\n  if (!move) {\n    throw `Unknown move family: ${signMove.family}`\n  }\n  return Multiply(def, move, signMove.amount);\n}\n\nexport class KPuzzle {\n  public state: Transformation\n  constructor(public definition: KPuzzleDefinition) {\n    this.state = IdentityTransformation(definition);\n  }\n\n  serialize(): string {\n    var output = \"\"\n    for (var orbitName in this.definition.orbits) {\n      output += orbitName + \"\\n\";\n      output += this.state[orbitName].permutation.join(\" \") + \"\\n\";\n      output += this.state[orbitName].orientation.join(\" \") + \"\\n\";\n    }\n    output = output.slice(0, output.length - 1); // Trim last newline.\n    return output;\n  }\n\n  applySiGNMove(signMove: SiGNMove) {\n    this.state = Combine(this.definition, this.state, stateForSiGNMove(this.definition, signMove));\n  }\n\n  applyMove(moveName: string): this {\n    var move:Transformation|undefined = this.definition.moves[moveName];\n    if (!move) {\n      move = this.expandSlicesByName(moveName) ;\n    }\n    if (!move) {\n      throw `Unknown move: ${moveName}`\n    }\n\n    this.state = Combine(this.definition, this.state, move);\n    return this;\n  }\n\n  getMoveExpander(create:boolean) {\n     var moveExpander = this.definition.moveExpander ;\n     if (create && !moveExpander) {\n        moveExpander = new MoveExpander() ;\n        this.definition.moveExpander = moveExpander ;\n     }\n     return moveExpander ;\n  }\n  setFaceNames(faceNames:Array<string>):void {\n     var me = this.getMoveExpander(true) ;\n     if (me)\n        me.setFaceNames(faceNames) ;\n  }\n  addGrip(grip1:string, grip2:string, nslices:number):void {\n     var me = this.getMoveExpander(true) ;\n     return me ? me.addGrip(grip1, grip2, nslices, this.definition) : undefined ;\n  }\n  expandSlices(rep:string, signMove:SiGNMove):Transformation|undefined {\n     var me = this.getMoveExpander(false) ;\n     return me ? me.expandSlices(rep, signMove, this.definition) : undefined ;\n  }\n  expandSlicesByName(mv:string):Transformation|undefined {\n     var me = this.getMoveExpander(false) ;\n     return me ? me.expandSlicesByName(mv, this.definition) : undefined ;\n  }\n\n  // TODO: Implement\n  // parseState(): this {}\n\n  // TODO: Alg parsing\n\n  // TODO: Implement.\n  // invert(): this {}\n}\n","import {KPuzzleDefinition} from \"./kpuzzle\"\n\nexport const Puzzles: {[key: string]: KPuzzleDefinition} = {\n  \"222\": {\n    name: \"222\",\n    orbits: {\"CORNERS\": {numPieces: 7, orientations: 3}},\n    startPieces: {\"CORNERS\": {permutation: [1, 2, 3, 4, 5, 6, 7], orientation: [0, 0, 0, 0, 0, 0, 0]}},\n    moves: {\n      \"U\": {\"CORNERS\": {permutation: [4, 1, 2, 3, 5, 6, 7], orientation: [0, 0, 0, 0, 0, 0, 0]}},\n      \"R\": {\"CORNERS\": {permutation: [1, 3, 6, 4, 2, 5, 7], orientation: [0, 2, 1, 0, 1, 2, 0]}},\n      \"F\": {\"CORNERS\": {permutation: [1, 2,4 , 7, 5, 3, 6], orientation: [0, 0, 0, 0, 0, 0, 0]}}\n    },\n    svg: \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.0//EN\\\"\\n       \\\"http://www.w3.org/TR/2001/REC-SVG-20050904/DTD/svg11.dtd\\\">\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" viewBox=\\\"0 0 490 370\\\" preserveAspectRatio=\\\"xMidYMid meet\\\">\\n  <defs>\\n  </defs>\\n  <title>222</title>\\n  <defs>\\n    <g id=\\\"sticker\\\">\\n        <rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"1\\\" height=\\\"1\\\" stroke=\\\"black\\\" stroke-width=\\\"0.04px\\\" />\\n    </g>\\n  </defs>\\n  <g id=\\\"puzzle\\\" transform=\\\"translate(5, 5) scale(60)\\\">\\n    <use id=\\\"CORNERS-l0-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(2, 0)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"CORNERS-l0-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(7, 2)\\\" style=\\\"fill: blue\\\"/>\\n    <use id=\\\"CORNERS-l0-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(0, 2)\\\" style=\\\"fill: orange\\\"/>\\n\\n    <use id=\\\"CORNERS-l1-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3, 0)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"CORNERS-l1-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(5, 2)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"CORNERS-l1-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(6, 2)\\\" style=\\\"fill: blue\\\"/>\\n\\n    <use id=\\\"CORNERS-l2-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3, 1)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"CORNERS-l2-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3, 2)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"CORNERS-l2-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(4, 2)\\\" style=\\\"fill: red\\\"/>\\n\\n    <use id=\\\"CORNERS-l3-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(2, 1)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"CORNERS-l3-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(1, 2)\\\" style=\\\"fill: orange\\\"/>\\n    <use id=\\\"CORNERS-l3-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(2, 2)\\\" style=\\\"fill: green\\\"/>\\n\\n    <use id=\\\"CORNERS-l4-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3, 5)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CORNERS-l4-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(6, 3)\\\" style=\\\"fill: blue\\\"/>\\n    <use id=\\\"CORNERS-l4-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(5, 3)\\\" style=\\\"fill: red\\\"/>\\n\\n    <use id=\\\"CORNERS-l5-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3, 4)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CORNERS-l5-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(4, 3)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"CORNERS-l5-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3, 3)\\\" style=\\\"fill: green\\\"/>\\n\\n    <use id=\\\"CORNERS-l6-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(2, 4)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CORNERS-l6-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(2, 3)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"CORNERS-l6-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(1, 3)\\\" style=\\\"fill: orange\\\"/>\\n\\n    <use                    xlink:href=\\\"#sticker\\\" transform=\\\"translate(2, 5)\\\" style=\\\"fill: yellow\\\"/>\\n    <use                    xlink:href=\\\"#sticker\\\" transform=\\\"translate(0, 3)\\\" style=\\\"fill: orange\\\"/>\\n    <use                    xlink:href=\\\"#sticker\\\" transform=\\\"translate(7, 3)\\\" style=\\\"fill: blue\\\"/>\\n  </g>\\n\\n</svg>\"\n  },\n  \"333\": {\n    name: \"333\",\n    orbits: {\n      \"CORNERS\": {numPieces: 8,  orientations: 3},\n      \"EDGES\":   {numPieces: 12, orientations: 2}\n    },\n    startPieces: {\n      \"CORNERS\": {permutation: [1, 2, 3, 4, 5, 6, 7, 8],                orientation: [0, 0, 0, 0, 0, 0, 0, 0]},\n      \"EDGES\":   {permutation: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}\n    },\n    moves: {\n      \"U\": {\"CORNERS\": {permutation: [4, 1, 2, 3, 5, 6, 7, 8],                orientation: [0, 0, 0, 0, 0, 0, 0, 0]            },\n            \"EDGES\":   {permutation: [4, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12], orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}},\n      \"R\": {\"CORNERS\": {permutation: [5, 2, 3, 1, 8, 6, 7, 4],                orientation: [1, 0, 0, 2, 2, 0, 0, 1]            },\n            \"EDGES\":   {permutation: [1, 2, 3, 5, 12, 6, 7, 4, 9, 10, 11, 8], orientation: [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1]}},\n      \"F\": {\"CORNERS\": {permutation: [2, 6, 3, 4, 1, 5, 7, 8],                orientation: [2, 1, 0, 0, 1, 2, 0, 0]            },\n            \"EDGES\":   {permutation: [6, 2, 3, 4, 1, 9, 7, 8, 5, 10, 11, 12], orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}},\n      \"D\": {\"CORNERS\": {permutation: [1, 2, 3, 4, 6, 7, 8, 5],                orientation: [0, 0, 0, 0, 0, 0, 0, 0]            },\n            \"EDGES\":   {permutation: [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 9], orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}},\n      \"L\": {\"CORNERS\": {permutation: [1, 3, 7, 4, 5, 2, 6, 8],                orientation: [0, 2, 1, 0, 0, 1, 2, 0]            },\n            \"EDGES\":   {permutation: [1, 7, 3, 4, 5, 2, 10, 8, 9, 6, 11, 12], orientation: [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0]}},\n      \"B\": {\"CORNERS\": {permutation: [1, 2, 4, 8, 5, 6, 3, 7],                orientation: [0, 0, 2, 1, 0, 0, 1, 2]            },\n            \"EDGES\":   {permutation: [1, 2, 8, 4, 5, 6, 3, 11, 9, 10, 7, 12], orientation: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}\n    },\n    svg: \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.0//EN\\\"\\n       \\\"http://www.w3.org/TR/2001/REC-SVG-20050904/DTD/svg11.dtd\\\">\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" viewBox=\\\"0 0 490 370\\\" preserveAspectRatio=\\\"xMidYMid meet\\\">\\n  <defs>\\n  </defs>\\n  <title>333</title>\\n  <defs>\\n    <g id=\\\"sticker\\\">\\n        <rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"1\\\" height=\\\"1\\\" stroke=\\\"black\\\" stroke-width=\\\"0.04px\\\" />\\n    </g>\\n  </defs>\\n\\n<!--        0 1 2 3 4 5 6 7 8 9 10 11  -->\\n<!--        | | | | | | | | | | | |<-  -->\\n<!--    0 -       . . .                -->\\n<!--    1 -       . . .                -->\\n<!--    2 -       . . .                -->\\n<!--    3 - . . . . . . . . . . . .    -->\\n<!--    4 - . . . . . . . . . . . .    -->\\n<!--    5 - . . . . . . . . . . . .    -->\\n<!--    6 -       . . .                -->\\n<!--    7 -       . . .                -->\\n<!--    8 -       . . .                -->\\n\\n  <g id=\\\"puzzle\\\" transform=\\\"translate(5, 5) scale(40)\\\">\\n    <!-- CORNERS -->\\n    <use id=\\\"CORNERS-l0-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(5,  2)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"CORNERS-l0-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(5,  3)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"CORNERS-l0-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(6,  3)\\\" style=\\\"fill: red\\\"/>\\n\\n    <use id=\\\"CORNERS-l1-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3,  2)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"CORNERS-l1-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(2,  3)\\\" style=\\\"fill: orange\\\"/>\\n    <use id=\\\"CORNERS-l1-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3,  3)\\\" style=\\\"fill: green\\\"/>\\n\\n    <use id=\\\"CORNERS-l2-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3,  0)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"CORNERS-l2-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(11, 3)\\\" style=\\\"fill: blue\\\"/>\\n    <use id=\\\"CORNERS-l2-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(0,  3)\\\" style=\\\"fill: orange\\\"/>\\n\\n    <use id=\\\"CORNERS-l3-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(5,  0)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"CORNERS-l3-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(8,  3)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"CORNERS-l3-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(9,  3)\\\" style=\\\"fill: blue\\\"/>\\n\\n    <use id=\\\"CORNERS-l4-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(5,  6)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CORNERS-l4-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(6,  5)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"CORNERS-l4-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(5,  5)\\\" style=\\\"fill: green\\\"/>\\n\\n    <use id=\\\"CORNERS-l5-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3,  6)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CORNERS-l5-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3,  5)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"CORNERS-l5-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(2,  5)\\\" style=\\\"fill: orange\\\"/>\\n\\n    <use id=\\\"CORNERS-l6-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(3,  8)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CORNERS-l6-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(0,  5)\\\" style=\\\"fill: orange\\\"/>\\n    <use id=\\\"CORNERS-l6-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(11, 5)\\\" style=\\\"fill: blue\\\"/>\\n\\n    <use id=\\\"CORNERS-l7-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(5,  8)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CORNERS-l7-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(9,  5)\\\" style=\\\"fill: blue\\\"/>\\n    <use id=\\\"CORNERS-l7-o2\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(8,  5)\\\" style=\\\"fill: red\\\"/>\\n\\n    <!-- EDGES -->\\n    <use id=\\\"EDGES-l0-o0\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  2)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"EDGES-l0-o1\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  3)\\\" style=\\\"fill: green\\\"/>\\n\\n    <use id=\\\"EDGES-l1-o0\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(3,  1)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"EDGES-l1-o1\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(1,  3)\\\" style=\\\"fill: orange\\\"/>\\n\\n    <use id=\\\"EDGES-l2-o0\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  0)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"EDGES-l2-o1\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(10, 3)\\\" style=\\\"fill: blue\\\"/>\\n\\n    <use id=\\\"EDGES-l3-o0\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(5,  1)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"EDGES-l3-o1\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(7,  3)\\\" style=\\\"fill: red\\\"/>\\n\\n    <use id=\\\"EDGES-l4-o0\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(6,  4)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"EDGES-l4-o1\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(5,  4)\\\" style=\\\"fill: green\\\"/>\\n\\n    <use id=\\\"EDGES-l5-o0\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(2,  4)\\\" style=\\\"fill: orange\\\"/>\\n    <use id=\\\"EDGES-l5-o1\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(3,  4)\\\" style=\\\"fill: green\\\"/>\\n\\n    <use id=\\\"EDGES-l6-o0\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(0,  4)\\\" style=\\\"fill: orange\\\"/>\\n    <use id=\\\"EDGES-l6-o1\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(11, 4)\\\" style=\\\"fill: blue\\\"/>\\n\\n    <use id=\\\"EDGES-l7-o0\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(8,  4)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"EDGES-l7-o1\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(9,  4)\\\" style=\\\"fill: blue\\\"/>\\n\\n    <use id=\\\"EDGES-l8-o0\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  6)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"EDGES-l8-o1\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  5)\\\" style=\\\"fill: green\\\"/>\\n\\n    <use id=\\\"EDGES-l9-o0\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(3,  7)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"EDGES-l9-o1\\\"  xlink:href=\\\"#sticker\\\" transform=\\\"translate(1,  5)\\\" style=\\\"fill: orange\\\"/>\\n\\n    <use id=\\\"EDGES-l10-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  8)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"EDGES-l10-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(10, 5)\\\" style=\\\"fill: blue\\\"/>\\n\\n    <use id=\\\"EDGES-l11-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(5,  7)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"EDGES-l11-o1\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(7,  5)\\\" style=\\\"fill: red\\\"/>\\n\\n    <!-- CENTERS -->\\n    <use id=\\\"CENTERS-l0-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  1)\\\" style=\\\"fill: white\\\"/>\\n    <use id=\\\"CENTERS-l1-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(1,  4)\\\" style=\\\"fill: orange\\\"/>\\n    <use id=\\\"CENTERS-l2-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  4)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"CENTERS-l3-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(7,  4)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"CENTERS-l4-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(10, 4)\\\" style=\\\"fill: blue\\\"/>\\n    <use id=\\\"CENTERS-l5-o0\\\" xlink:href=\\\"#sticker\\\" transform=\\\"translate(4,  7)\\\" style=\\\"fill: yellow\\\"/>\\n  </g>\\n\\n</svg>\"\n  },\n  \"pyram\": {\n    name: \"pyram\",\n    orbits: { \"CENTERS\": {numPieces: 4, orientations: 3},\n              \"TIPS\": {numPieces: 4, orientations: 3},\n              \"EDGES\": {numPieces: 6, orientations: 2}},\n    startPieces: { \"CENTERS\": {permutation: [1, 2, 3, 4], orientation: [0,0,0,0]},\n                   \"TIPS\": {permutation: [1, 2, 3, 4], orientation: [0,0,0,0]},\n                   \"EDGES\": {permutation: [1, 2, 3, 4,5,6], orientation: [0,0,0,0,0,0]}},\n    moves: {\n      \"U\": {\"CENTERS\": {permutation: [1,2,3,4], orientation: [1,0,0,0]},\n            \"TIPS\": {permutation: [1,2,3,4], orientation: [1,0,0,0]},\n            \"EDGES\": {permutation: [2,3,1,4,5,6], orientation: [1,0,1,0,0,0]}},\n      \"L\": {\"CENTERS\": {permutation: [1,2,3,4], orientation: [0,1,0,0]},\n            \"TIPS\": {permutation: [1,2,3,4], orientation: [0,1,0,0]},\n            \"EDGES\": {permutation: [6,2,3,1,5,4], orientation: [1,0,0,0,0,1]}},\n      \"R\": {\"CENTERS\": {permutation: [1,2,3,4], orientation: [0,0,1,0]},\n            \"TIPS\": {permutation: [1,2,3,4], orientation: [0,0,1,0]},\n            \"EDGES\": {permutation: [1,4,3,5,2,6], orientation: [0,0,0,1,1,0]}},\n      \"B\": {\"CENTERS\": {permutation: [1,2,3,4], orientation: [0,0,0,1]},\n            \"TIPS\": {permutation: [1,2,3,4], orientation: [0,0,0,1]},\n            \"EDGES\": {permutation: [1,2,5,4,6,3], orientation: [0,0,0,0,1,1]}},\n      \"u\": {\"CENTERS\": {permutation: [1,2,3,4], orientation: [0,0,0,0]},\n            \"TIPS\": {permutation: [1,2,3,4], orientation: [1,0,0,0]},\n            \"EDGES\": {permutation: [1,2,3,4,5,6], orientation: [0,0,0,0,0,0]}},\n      \"l\": {\"CENTERS\": {permutation: [1,2,3,4], orientation: [0,0,0,0]},\n            \"TIPS\": {permutation: [1,2,3,4], orientation: [0,1,0,0]},\n            \"EDGES\": {permutation: [1,2,3,4,5,6], orientation: [0,0,0,0,0,0]}},\n      \"r\": {\"CENTERS\": {permutation: [1,2,3,4], orientation: [0,0,0,0]},\n            \"TIPS\": {permutation: [1,2,3,4], orientation: [0,0,1,0]},\n            \"EDGES\": {permutation: [1,2,3,4,5,6], orientation: [0,0,0,0,0,0]}},\n      \"b\": {\"CENTERS\": {permutation: [1,2,3,4], orientation: [0,0,0,0]},\n            \"TIPS\": {permutation: [1,2,3,4], orientation: [0,0,0,1]},\n            \"EDGES\": {permutation: [1,2,3,4,5,6], orientation: [0,0,0,0,0,0]}}\n    },\n    svg: \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.0//EN\\\"\\n       \\\"http://www.w3.org/TR/2001/REC-SVG-20050904/DTD/svg11.dtd\\\">\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" viewBox=\\\"0 0 490 420.69219392\\\" preserveAspectRatio=\\\"xMidYMid meet\\\">\\n  <defs>\\n  </defs>\\n  <title>222</title>\\n  <defs>\\n    <g id=\\\"stickerA\\\" transform=\\\"scale(1, 0.577350269)\\\">\\n      <path\\n         d=\\\"m 0,1.732050808 1,-1.732050808 1,1.732050808 z\\\"\\n         stroke=\\\"black\\\" stroke-width=\\\"0.04px\\\" stroke-linecap=\\\"butt\\\" stroke-linejoin=\\\"round\\\"\\n      />\\n    </g>\\n    <g id=\\\"stickerV\\\" transform=\\\"scale(1, 0.577350269)\\\">\\n      <path\\n         d=\\\"m 0,0 1,1.732050808 1,-1.732050808 z\\\"\\n         stroke=\\\"black\\\" stroke-width=\\\"0.04px\\\" stroke-linecap=\\\"butt\\\" stroke-linejoin=\\\"round\\\"\\n      />\\n    </g>\\n  </defs>\\n\\n<!--        0 1 2 3 4 5 6 7 8 9 10   -->\\n<!--        | | | | | | | | | | |    -->\\n<!--    0 - L L L L L F R R R R R    -->\\n<!--    1 -   L L L F F F R R R      -->\\n<!--    2 -     L F F F F F R        -->\\n<!--    3 -       D D D D D          -->\\n<!--    4 -         D D D            -->\\n<!--    5 -           D              -->\\n\\n  <g id=\\\"puzzle\\\" transform=\\\"translate(5, 5) scale(40, 69.28203232)\\\">\\n    <!-- CENTERS -->\\n    <use id=\\\"CENTERS-l0-o0\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(5, 1)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CENTERS-l0-o1\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(3, 0)\\\" style=\\\"fill: blue\\\"/>\\n    <use id=\\\"CENTERS-l0-o2\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(7, 0)\\\" style=\\\"fill: red\\\"/>\\n\\n    <use id=\\\"CENTERS-l1-o0\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(4, 2)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CENTERS-l1-o1\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(4, 3)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"CENTERS-l1-o2\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(2, 1)\\\" style=\\\"fill: blue\\\"/>\\n\\n    <use id=\\\"CENTERS-l2-o0\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(6, 2)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"CENTERS-l2-o1\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(8, 1)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"CENTERS-l2-o2\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(6, 3)\\\" style=\\\"fill: green\\\"/>\\n\\n    <use id=\\\"CENTERS-l3-o0\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(9, 0)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"CENTERS-l3-o1\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(1, 0)\\\" style=\\\"fill: blue\\\"/>\\n    <use id=\\\"CENTERS-l3-o2\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(5, 4)\\\" style=\\\"fill: green\\\"/>\\n\\n    <!-- TIPS -->\\n    <use id=\\\"TIPS-l0-o0\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(5, 0)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"TIPS-l0-o1\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(4, 0)\\\" style=\\\"fill: blue\\\"/>\\n    <use id=\\\"TIPS-l0-o2\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(6, 0)\\\" style=\\\"fill: red\\\"/>\\n\\n    <use id=\\\"TIPS-l1-o0\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(3, 2)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"TIPS-l1-o1\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(3, 3)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"TIPS-l1-o2\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(2, 2)\\\" style=\\\"fill: blue\\\"/>\\n\\n    <use id=\\\"TIPS-l2-o0\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(8, 2)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"TIPS-l2-o1\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(7, 3)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"TIPS-l2-o2\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(7, 2)\\\" style=\\\"fill: yellow\\\"/>\\n\\n    <use id=\\\"TIPS-l3-o0\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(10,0)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"TIPS-l3-o1\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(0, 0)\\\" style=\\\"fill: blue\\\"/>\\n    <use id=\\\"TIPS-l3-o2\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(5, 5)\\\" style=\\\"fill: green\\\"/>\\n\\n    <!-- EDGES -->\\n    <use id=\\\"EDGES-l0-o0\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(4, 1)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"EDGES-l0-o1\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(3, 1)\\\" style=\\\"fill: blue\\\"/>\\n\\n    <use id=\\\"EDGES-l1-o0\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(6, 1)\\\" style=\\\"fill: yellow\\\"/>\\n    <use id=\\\"EDGES-l1-o1\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(7, 1)\\\" style=\\\"fill: red\\\"/>\\n\\n    <use id=\\\"EDGES-l2-o0\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(8, 0)\\\" style=\\\"fill: red\\\"/>\\n    <use id=\\\"EDGES-l2-o1\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(2, 0)\\\" style=\\\"fill: blue\\\"/>\\n\\n    <use id=\\\"EDGES-l3-o0\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(5, 3)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"EDGES-l3-o1\\\" xlink:href=\\\"#stickerA\\\" transform=\\\"translate(5, 2)\\\" style=\\\"fill: yellow\\\"/>\\n\\n    <use id=\\\"EDGES-l4-o0\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(6, 4)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"EDGES-l4-o1\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(9, 1)\\\" style=\\\"fill: red\\\"/>\\n\\n    <use id=\\\"EDGES-l5-o0\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(4, 4)\\\" style=\\\"fill: green\\\"/>\\n    <use id=\\\"EDGES-l5-o1\\\" xlink:href=\\\"#stickerV\\\" transform=\\\"translate(1, 1)\\\" style=\\\"fill: blue\\\"/>\\n  </g>\\n\\n</svg>\"\n  }\n};\n","import {KPuzzleDefinition} from \"./kpuzzle\"\nimport {parse as jison_parse} from \"./jison_parser\";\n\nfunction FixMoves(def: KPuzzleDefinition) {\n   for (var moveName in def.moves) {\n      var move = def.moves[moveName] ;\n      for (var orbitName in def.orbits) {\n         var moveOrbit = move[orbitName] ;\n         var oldOrientation = moveOrbit.orientation ;\n         var perm = moveOrbit.permutation ;\n         var newOrientation = new Array(oldOrientation.length) ;\n         for (var i=0; i<perm.length; i++)\n            newOrientation[i] = oldOrientation[perm[i]-1] ;\n         moveOrbit.orientation = newOrientation ;\n      }\n   }\n   return def ;\n}\n\nexport function parse(s: string): KPuzzleDefinition {\n  return FixMoves(<KPuzzleDefinition>jison_parse(s));\n}\n","import {\n  KPuzzleDefinition,\n  Transformation\n} from \"./kpuzzle\"\n\nvar xmlns = \"http://www.w3.org/2000/svg\";\n\n// Unique ID mechanism to keep SVG gradient element IDs unique. TODO: Is there\n// something more performant, and that can't be broken by other elements of the\n// page? (And also doesn't break if this library is run in parallel.)\nvar svgCounter = 0;\nfunction nextSVGID(): string {\n  svgCounter += 1;\n  return \"svg\" + svgCounter.toString();\n}\n\nexport class SVG {\n  public element: HTMLElement;\n  public gradientDefs: SVGDefsElement;\n  private originalColors: {[type: string]: string} = {}\n  private gradients: {[type: string]: SVGGradientElement} = {}\n  private svgID: string\n  constructor(public kPuzzleDefinition: KPuzzleDefinition) {\n    if (!kPuzzleDefinition.svg) {\n      throw `No SVG definition for puzzle type: ${kPuzzleDefinition.name}`\n    }\n\n    this.svgID = nextSVGID();\n\n    this.element = document.createElement(\"div\");\n    this.element.classList.add(\"svg-wrapper\");\n    // TODO: Sanitization.\n    this.element.innerHTML = kPuzzleDefinition.svg;\n    document.body.appendChild(this.element);\n\n    var svgElem = this.element.querySelector(\"svg\");\n    if (!svgElem) {\n      throw \"Could not get SVG element\";\n    }\n    if (xmlns !== svgElem.namespaceURI) {\n      throw \"Unexpected XML namespace\";\n    }\n    this.gradientDefs = <SVGDefsElement>document.createElementNS(xmlns, \"defs\");\n    svgElem.insertBefore(this.gradientDefs, svgElem.firstChild);\n\n    for (var orbitName in kPuzzleDefinition.orbits) {\n      var orbitDefinition = kPuzzleDefinition.orbits[orbitName];\n\n      for (var idx = 0; idx < orbitDefinition.numPieces; idx++) {\n        for (var orientation = 0; orientation < orbitDefinition.orientations; orientation++) {\n          var id = this.elementID(orbitName, idx, orientation);\n          var elem = this.elementByID(id);\n          var originalColor = elem.style.fill as string;\n          this.originalColors[id] = originalColor;\n          this.gradients[id] = this.newGradient(id, originalColor);\n          this.gradientDefs.appendChild(this.gradients[id]);\n          elem.setAttribute(\"style\", `fill: url(#grad-${this.svgID}-${id})`);\n        }\n      }\n    }\n  }\n\n  private newGradient(id: string, originalColor: string): SVGGradientElement {\n    var grad = <SVGGradientElement>document.createElementNS(xmlns, \"radialGradient\");\n    grad.setAttribute(\"id\", `grad-${this.svgID}-${id}`);\n    grad.setAttribute(\"r\", `70.7107%`); // TODO: Adapt to puzzle.\n    var stopDefs = [\n      {offset: 0, color: originalColor},\n      {offset: 0, color: originalColor},\n      {offset: 0, color: \"black\"},\n      {offset: 0, color: \"black\"},\n      {offset: 0, color: originalColor},\n      {offset: 100, color: originalColor}\n    ];\n    for (var stopDef of stopDefs) {\n      var stop = <SVGStopElement>document.createElementNS(xmlns,\n        \"stop\");\n      stop.setAttribute(\"offset\", `${stopDef.offset}%`);\n      stop.setAttribute(\"stop-color\", stopDef.color);\n      stop.setAttribute(\"stop-opacity\", \"1\");\n      grad.appendChild(stop);\n    }\n    return grad;\n  }\n\n  private elementID(orbitName: string, idx: number, orientation: number): string {\n    return orbitName + \"-l\" + idx + \"-o\" + orientation;\n  }\n\n  private elementByID(id: string): HTMLElement {\n    // TODO: Use classes and scope selector to SVG element.\n    return this.element.querySelector(\"#\" + id) as HTMLElement;\n  }\n\n  draw(definition: KPuzzleDefinition, state: Transformation, nextState?: Transformation, fraction?: number) {\n    for (var orbitName in definition.orbits) {\n      var orbitDefinition = definition.orbits[orbitName];\n\n      var curOrbitState = state[orbitName];\n      var nextOrbitState = nextState ? (nextState as Transformation)[orbitName] : null;\n      for (var idx = 0; idx < orbitDefinition.numPieces; idx++) {\n        for (var orientation = 0; orientation < orbitDefinition.orientations; orientation++) {\n          var id = this.elementID(orbitName, idx, orientation);\n          var fromCur = this.elementID(\n            orbitName,\n            curOrbitState.permutation[idx] - 1,\n            (orbitDefinition.orientations - curOrbitState.orientation[idx] + orientation) % orbitDefinition.orientations\n          );\n          var singleColor = false;\n          if (nextOrbitState) {\n            var fromNext = this.elementID(\n              orbitName,\n              nextOrbitState.permutation[idx] - 1,\n              (orbitDefinition.orientations - nextOrbitState.orientation[idx] + orientation) % orbitDefinition.orientations\n            );\n            if (fromCur === fromNext) {\n              singleColor = true; // TODO: Avoid redundant work during move.\n            }\n            fraction = fraction || 0; // TODO Use the type system to tie this to nextState?\n            var easedBackwardsPercent = 100 * (1 - fraction * fraction * (2 - fraction * fraction)); // TODO: Move easing up the stack.\n            this.gradients[id].children[0].setAttribute(\"stop-color\", this.originalColors[fromCur]);\n            this.gradients[id].children[1].setAttribute(\"stop-color\", this.originalColors[fromCur]);\n            this.gradients[id].children[1].setAttribute(\"offset\", `${Math.max(easedBackwardsPercent - 5, 0)}%`)\n            this.gradients[id].children[2].setAttribute(\"offset\", `${Math.max(easedBackwardsPercent - 5, 0)}%`)\n            this.gradients[id].children[3].setAttribute(\"offset\", `${easedBackwardsPercent}%`)\n            this.gradients[id].children[4].setAttribute(\"offset\", `${easedBackwardsPercent}%`)\n            this.gradients[id].children[4].setAttribute(\"stop-color\", this.originalColors[fromNext]);\n            this.gradients[id].children[5].setAttribute(\"stop-color\", this.originalColors[fromNext]);\n          } else {\n            singleColor = true; // TODO: Avoid redundant work during move.\n          }\n          if (singleColor) {\n            this.gradients[id].children[0].setAttribute(\"stop-color\", this.originalColors[fromCur]);\n            this.gradients[id].children[1].setAttribute(\"stop-color\", this.originalColors[fromCur]);\n            this.gradients[id].children[1].setAttribute(\"offset\", `100%`)\n            this.gradients[id].children[2].setAttribute(\"offset\", `100%`)\n            this.gradients[id].children[3].setAttribute(\"offset\", `100%`)\n            this.gradients[id].children[4].setAttribute(\"offset\", `100%`)\n          }\n          // this.gradients[id]\n          // this.elementByID(id).style.fill = this.originalColors[from];\n        }\n      }\n    }\n  }\n}\n"],"sourceRoot":""}