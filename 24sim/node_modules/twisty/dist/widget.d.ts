import { KPuzzleDefinition } from "kpuzzle";
import { CursorObserver, DirectionObserver, JumpObserver, AnimModel } from "./anim";
import { Cursor } from "./cursor";
import { Puzzle } from "./puzzle";
export declare abstract class Button {
    element: HTMLButtonElement;
    constructor(title: string, initialClass: string);
    abstract onpress(): void;
}
export declare module Button {
    class Fullscreen extends Button {
        private fullscreenElement;
        constructor(fullscreenElement: HTMLElement);
        onpress(): void;
    }
    class SkipToStart extends Button {
        private anim;
        constructor(anim: AnimModel);
        onpress(): void;
    }
    class SkipToEnd extends Button {
        private anim;
        constructor(anim: AnimModel);
        onpress(): void;
    }
    class PlayPause extends Button implements DirectionObserver {
        private anim;
        constructor(anim: AnimModel);
        onpress(): void;
        animDirectionChanged(direction: Cursor.Direction): void;
    }
    class StepForward extends Button {
        private anim;
        constructor(anim: AnimModel);
        onpress(): void;
    }
    class StepBackward extends Button {
        private anim;
        constructor(anim: AnimModel);
        onpress(): void;
    }
}
export declare class ControlBar {
    private anim;
    private twistyElement;
    element: HTMLElement;
    constructor(anim: AnimModel, twistyElement: HTMLElement);
}
export declare class Scrubber implements CursorObserver {
    private anim;
    readonly element: HTMLInputElement;
    constructor(anim: AnimModel);
    private updateBackground;
    private oninput;
    animCursorChanged(cursor: Cursor<Puzzle>): void;
    animBoundsChanged(): void;
}
export declare class CursorTextView implements CursorObserver {
    private anim;
    readonly element: HTMLElement;
    constructor(anim: AnimModel);
    animCursorChanged(cursor: Cursor<Puzzle>): void;
}
export declare class CursorTextMoveView implements CursorObserver {
    private anim;
    readonly element: HTMLElement;
    constructor(anim: AnimModel);
    private formatFraction;
    animCursorChanged(cursor: Cursor<Puzzle>): void;
}
export declare class KSolveView implements CursorObserver, JumpObserver {
    private anim;
    private definition;
    readonly element: HTMLElement;
    private svg;
    constructor(anim: AnimModel, definition: KPuzzleDefinition);
    animCursorChanged(cursor: Cursor<Puzzle>): void;
    animCursorJumped(): void;
}
export declare class Player {
    private anim;
    element: HTMLElement;
    constructor(anim: AnimModel, definition: KPuzzleDefinition);
}
